#!/usr/bin/env ruby

# written 2012 by tpltnt
# License: GPLv3

if 2 != ARGV.length then
  puts "usage: sup-purge <dumpfile> <maildir>"
  exit 1
end

begin
  dump = File.open(ARGV[0].to_s,'r')
rescue Errno::ENOENT
  puts "file not found"
  exit 1
end

# test maildir for being a directory
if !File.directory?(ARGV[1].to_s) then
  puts "given maildir is not a directory"
  exit 1
end
maildir = ARGV[1].to_s

messagestobedeleted = []
remainingmessages = []
# iterate over all lines
dump.each do |line|
  # filter out all sane line
  if nil != line.match(/.*\@.*\s\(.*\)/) then
    # match against "deleted" flag
    if nil != line.match(/deleted/) then
      # split at "deleted" and get first chunk of chars & add to list of messages
      messagestobedeleted.push( line.split(/deleted/)[0].split(" ")[0] )
    end
  else
    # save remaining lines for new index
    remainingmessages.push(line)
  end
end

dump.close

#TODO:
# find messages & delete them
messagestobedeleted.each do |delfile|
  if File.exists?("#{maildir}/#{delfile}") then
    puts "#{maildir}/#{delfile} deleted"
  end
end

# save new clean index
begin
  tempdump = File.open('dump.tmp','w')
rescue Errno::ENOENT
  puts "can't write temporary index"
  exit 1
end

remainingmessages.each do |message|
  puts message
end

tempdump.close
